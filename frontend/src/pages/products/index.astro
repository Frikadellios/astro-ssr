---
// Components
import Layout from "../../layouts/Layout.astro";
import ProductCard from "../../components/product/ProductCard.astro";
import PageHero from "../../components/PageHero.astro";

// Buttons/Links data
const actions = [
  { actionName: "Add New Product", action: "modal", actionData: "" },
];

// Interfaces
import type IProduct from "../../interfaces/IProduct";

// Fetch products data
const response = await fetch(`${import.meta.env.PUBLIC_SERVER_URL}/api/products/?populate=*`);
const data = await response.json();
const products = data.data.map((product: { id: number; attributes: { title: string; price: number; image: { data: { attributes: { url: string; }; }; }; }; }) => {
  return {
    id: product.id,
    title: product.attributes.title,
    price: product.attributes.price,
    image: product.attributes.image.data.attributes.url,
  }
})
---

<Layout>
  <div class="container d-flexflex-column flex-column-fluid p-10 pb-lg-20">
    <!--begin::Page hero-->
    <PageHero name="Product" actions={actions} />
    <!--end::Page hero-->
    <!--begin::Products wrapper-->
    <div class="flex-column-fluid">
      <!--begin::Products-->
      <div class="row">
        {products.map((product: IProduct) => <ProductCard product={product}/>)}
      </div>
      <!--end::Products-->
    </div>
    <!--end::Products wrapper-->
  </div>
</Layout>

<script>
  //////////////////////////////////////////
  // Show toast function
  const showToast = (title: string, message: string) => {
    // Get toast elements
    const toastEl = document.querySelector(".toast") as HTMLElement
    const titleEl = toastEl.querySelector(".me-auto") as HTMLElement
    const bodyEl = toastEl.querySelector(".toast-body") as HTMLElement

    // Set title and message
    titleEl.textContent = title
    bodyEl.textContent = message

    // Show notification
    toastEl.classList.remove("hide")
    toastEl.classList.add("show")
  }
  //////////////////////////////////////////
  // Add new product
  // Get form
  const form = document.querySelector("#kt_ecommerce_add_product_form") as HTMLFormElement;
  // Add event listener
  form.addEventListener('submit', async (e) => {
    e.preventDefault();

    // Get image data, title, price
    const payload = new FormData(form)
    const title = payload.get("title");
    const price = payload.get("price");
    payload.delete("title")
    payload.delete("price")

    // Upload image
    fetch(`${import.meta.env.PUBLIC_SERVER_URL}/api/upload`, {
        method: "POST", body: payload
      })
    .then(res => res.json()).then(data => {
      // Get image id
      const imgId = data[0].id
      // Create new product object
      const product = {
        title,
        price,
        image: imgId
      }
      
      // Post new product
      fetch(`${import.meta.env.PUBLIC_SERVER_URL}/api/products`,{
        method: "POST",
        headers: new Headers({
          'Authorization': `Bearer ${document.cookie.slice(10)}`, 
          'Content-Type': 'application/json'
        }),
        body: JSON.stringify({data: product})
      })
      .then(res => 
      {
        if(res.ok === false) {
          showToast("Error", "OOPS :( Maybe you haven't SIGN IN ðŸ˜¬")
        }
        if(res.ok === true) {
        window.location.href = "/products"
        }
        // Close modal
        document.querySelector("#kt_modal_1")!.classList.remove("show")
        document.querySelector(".modal-backdrop")!.classList.remove("show")
      })
    }).catch(err => {
      // Close modal
      document.querySelector("#kt_modal_1")!.classList.remove("show")
      document.querySelector(".modal-backdrop")!.classList.remove("show")
      // Show toast
      showToast("Error", "Something went wrong! Try to stay calm and positive.")
    })
  });
</script>